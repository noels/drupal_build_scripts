/**
set up a new project (set up repository, database, vhost)
manage developers that have access to the repository
backup and deploy project from developing server to staging server, or from staging to live
make backup & restore backup
*/

import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

ext.propertyFiles = [
        "secure.properties",
        "${ant.properties.site}.properties",
        "${ant.properties.env}.properties",
        "build.properties"
]
ant.importBuild "build.xml"
apply from: "runCmd.gradle"
apply from: "drush.gradle"
apply from: "database.gradle"

task init {
    inputs.files propertyFiles
    outputs.file ant.properties."drupal.filesTarget"
    doFirst{
        //See createSymlinks for why this is commented out
        //runCmd("rm -f ${ant.properties.build}/${ant.properties."site"}", new File(".") )

        //create the files directory target as gradle can't handle dangling symlinks
        runCmd("mkdir -p ${ant.properties."drupal.filesTarget"}", new File(".") )
    }
}

task clean << {
    new File("remote.output").delete()
    runCmd("""sudo /bin/rm -rf ${ant.properties.build}""", new File("."))
}

/* this is a customised copy task which is why there is a slightly different syntax for defining it.
	Note the missing <<.
*/
task copySrc(type: Copy) {
	from("${ant.properties.src}"){
		exclude "sites/default"
		exclude ant.properties."site"
		exclude "sites/all/modules/dev"
		exclude "src/sites/all/data/"
		exclude ".git*"
	}
	into "${ant.properties."drupal.root"}"
}

task generateSettings(type: Copy)  {
    inputs.files propertyFiles
    fileMode 0444
    dirMode 0555
    from("templates/") {
        include "${ant.properties.settingsTemplate}.skel"
    }
    into "${ant.properties."drupal.root"}/sites/${ant.properties.site}"
    rename {name->"settings.php"}
    filter(ReplaceTokens, tokens: ant.properties)
}

task createSymlinks(dependsOn: "generateSettings") << {
	// Symlinking the site name to the current directory is stupid: It's left in here to document the fail
    // It's possible that at deploy time, the symlink can be put into each server, but really should be fixed.
	// runCmd("ln -sfh . ${ant.properties."site"}", new File(ant.properties.build) )
    runCmd("sudo /bin/ln -sfh ${ant.properties."drupal.filesTarget"} ${ant.properties."drupal.filesDir"}", new File("${ant.properties."drupal.root"}"))
}

task compassCompile(dependsOn: "copySrc") << {
    drush(
            drushCmd: "compass"
    )
}

ext.dbUrl = {
    "mysql://${ant.properties."db.adminuser"}:${ant.properties."db.adminpass"}@${ant.properties."db.host"}/${ant.properties."db.name"}"
}

task buildSite(dependsOn: ["copySrc", "generateSettings", "createSymlinks"]) {

}

task installDrupal(dependsOn: buildSite) << {
    sql( sqlQuery: dropDatabaseSql)
    sql( sqlQuery: createDatabaseSql)
    ant.properties.webservers.split(',').each{ server ->
        sql( sqlQuery: grantPermissionsSql.replaceAll("@@HOST@@", server))
    }
    drush(
            drushCmd: "site-install ${ant.properties."drupal.profile"} " +
                "--sites-subdir=${ant.properties."site"} " +
                "--account-name=${ant.properties."drupal.adminuser"} " +
                "--account-pass=${ant.properties."drupal.adminpass"} " +
                "--site-mail='${ant.properties.mail}' " +
                "--site-name='${ant.properties."site"}' --yes"
    )

    if (ant.properties."drupal.modules"){
        drush(
                drushCmd: "pm-enable ${ant.properties."drupal.modules".split(',').join(' ')}"
        )
    }
}

task dropDatabase() << {
    def host = ant.properties."db.host"
    runCmd
}

task backupDatabase() << {
    backupDatabaseToGzip()
}

task recreateDatabase() << {
    sql( sqlQuery: dropDatabaseSql)
    sql( sqlQuery: createDatabaseSql)
}

task restoreDatabase() << {
    restoreDatabaseFromGzip()
}
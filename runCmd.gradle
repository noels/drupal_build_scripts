ext.runCmd = {String cmd, File baseDir ->
    def sout = new StringBuffer()
    def serr = new StringBuffer()
    def outProc = Runtime.runtime.exec(cmd, [] as String[], baseDir)
    def running = true
    def bufferPrinter = {buffer ->
      def lastIndex = 0
      while(running) {
        def length = buffer.length()
        if (length > lastIndex) {
          print buffer.subSequence(lastIndex, length)
          lastIndex = length
        }
        Thread.sleep(100)
      }
    }
    Thread.start bufferPrinter.curry(sout)
    Thread.start bufferPrinter.curry(serr)

    outProc.consumeProcessOutput(sout, serr)
    try {
      outProc.waitFor()
    }
    finally {
      running = false
    }

    if (outProc.exitValue()) {
      println "Error code: ${outProc.exitValue()}"
      println serr
      System.exit(1)
    }
}

ext.runSshCmd = {cmd, host, args = [] ->
    String keyFile = args.keyFile?:ant.properties."build.userkey"
    String buildUser = args.buildUser?:ant.properties."build.user"
    String passphrase = args.passphrase?:ant.properties."build.userPassphrase"
    Boolean failOnError = args.failOnError?: true
    def log = new File(ant.properties.remoteOutputFile)
    log.append("\nRunning:: ${cmd}\nOn host ${host} As ${buildUser}\n")
    ant.sshexec(
            username: buildUser,
            host:host,
            command: cmd,
            failonerror:failOnError,
            keyfile:keyFile,
            passphrase:passphrase,
            append: true,
            trust:true,
            outputproperty: "outputBuffer",
            verbose: 'true'
    )
    if (ant.properties.outputBuffer){
        log.append("Output:\n${ant.properties.outputBuffer}")
    }
    log.append("Done\n")

}

